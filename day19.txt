MVC 중 controller의 역할
 나는 애초에 controller를 사용해 API를 구성해서 잘 와닿지는 않지만

중복되는 코드를 스프링에서 대신 처리(json타입으로 변환, contentType설정같은 작업)

api 이름마다 파일을 만들 필요가 없음
서블릿은 세팅대로 파일을 만들어줘야 하지만, 컨트롤러는 매서드 이름 자유로이 사용 가능

mvc패턴
정적 웹 페이지 - 클라이언트의 요청을 Model로 받아 처리(회원가입을 위한 개인 정보들)
클라이언트에게 view(정적 웹 페이지,HTML을 내려줌)

동적 웹 페이지(뭔가 변화를 줘서 내려줌) - 클라이언트의 요청을 model로 받아 처리 
템플릿 엔진에게 view, model 전달
	view - 동적 html 파일
	model - view에 적용할 정보들(클라이언트 - 엔진)
	템플릿 엔진 - 뷰에 모델을 적용 - 동적 웹 페이지의 생성
	예) 로그인 성공 시, 로그인 된 사용자의 id를 페이지에 추가
	종류 - Thymeleaf, Groovy, FreeMaker, Jade 등 (jsp사용은 현재 스프링에서 추천하지는 않고 있음)
클라이언트에게 뷰 전달

==========================
갑자기 느낀 점
RequsetDto를 왜 만드는가
ResponseDto는 또 왜?
