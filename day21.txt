키워드 / 느슨한 결합력, 인터페이스, 의존성 주입(DI), 제어의 역전(IOC)
==============================================================================
스프링과 스프링부트

스프링은 프레임워크 / 자바 생태계에서 가장 대중적인 응용 프로그램 기발 프레임워크
의존성 주입(DI) 제어의 역전(IOC)가 스프링이 많이 쓰이는 이유라고 볼 수 있다.
기존에는 해당 기능을 활용하기 위해 자바의 EE버전(Enterprise edition)을 활용했는데, 활용방법이 복잡했다.
하지만 스프링은 복잡함 없이 라이브러리 형태로 기능 활용이 가능하기 때문에, 많이 쓰는 것 

Enterprise edition은 스프링의 영향을 받아 기존의 복잡한 구조를 탈피했으나, 이미 많은 사람들이 스프링을 활용하는 환경이고 유료화 역시 진행됨에 따라 사람들의 관심을 못 받음



==============================================================================
의존성 주입(DI) 제어의 역전(IOC), 이들로 인해 결합도를 낮추는 방식으로 어플리케이션을 개발할 수 있음

의존성 주입이란?


==============================================================================
제어의 역전이란?
일반적인 자바 프로그램에서는 각 객체들이 프로그램의 흐름을 결정하고 각 객체를 직접 생성하며 조작하는 작업을 함
(객체를 직접 생성하여 메소드 호출) -> 모든 작업을 사용자가 제어

제어의 역전은 
객체의 생성을 특별한 관리위임주체에게 맡김
즉, 사용자는 객체를 직접 생성하지 않고, 객체의 생명주기를 컨트롤하는 주체는 사용자가 아니게 됨







